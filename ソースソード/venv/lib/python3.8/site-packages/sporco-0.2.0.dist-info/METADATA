Metadata-Version: 2.1
Name: sporco
Version: 0.2.0
Summary: Sparse Optimisation Research Code: A Python package for sparse coding and dictionary learning
Home-page: https://github.com/bwohlberg/sporco
Author: Brendt Wohlberg
Author-email: brendt@ieee.org
License: BSD
Keywords: Sparse Representations,Sparse Coding,Dictionary Learning,Convolutional Sparse Representations,Convolutional Sparse Coding,Optimization,ADMM,PGM
Platform: Any
Classifier: License :: OSI Approved :: BSD License
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: future
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: imageio
Requires-Dist: matplotlib
Requires-Dist: pyfftw
Provides-Extra: docs
Requires-Dist: sphinx (>=2.2) ; extra == 'docs'
Requires-Dist: numpydoc ; extra == 'docs'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'docs'
Requires-Dist: sphinx-tabs ; extra == 'docs'
Requires-Dist: sphinx-fontawesome ; extra == 'docs'
Requires-Dist: jonga ; extra == 'docs'
Requires-Dist: ipython (>=6.3.1) ; extra == 'docs'
Requires-Dist: jupyter ; extra == 'docs'
Requires-Dist: py2jn ; extra == 'docs'
Requires-Dist: pypandoc ; extra == 'docs'
Provides-Extra: gpu
Requires-Dist: cupy ; extra == 'gpu'
Requires-Dist: gputil ; extra == 'gpu'
Requires-Dist: wurlitzer ; extra == 'gpu'
Provides-Extra: optional
Requires-Dist: numexpr ; extra == 'optional'
Requires-Dist: mpldatacursor ; extra == 'optional'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: pytest-runner ; extra == 'tests'


SPORCO is a Python package for solving optimisation problems with
sparsity-inducing regularisation. These consist primarily of sparse
coding and dictionary learning problems, including convolutional
sparse coding and dictionary learning, but there is also support for
other problems such as Total Variation regularisation and Robust
PCA. The optimisation algorithms in the current version are based
on the Alternating Direction Method of Multipliers (ADMM) or on
the Fast Iterative Shrinkage-Thresholding Algorithm (PGM).


